program        : stmt* EOF ;

decl           : var_decl
               | stmt ;

var_decl       : "var" IDENT ( "=" expression )? ";" ;

stmt           : expr_stmt
               | forStmt
               | if_stmt
               | print_stmt
               | while_stmt
               | block ;

expr_stmt      : expression ";" ;
forStmt        : "for" "(" ( var_decl | expr_stmt | ";" )
                 expression? ";" expression? ")" stmt ;
if_stmt        : "if" "(" expression ")" stmt ( "else" stmt )? ;
print_stmt     : "print" expression ";" ;
while_stmt     : "while" "(" expression ")" stmt ;
block          : "{" decl* "}" ;

expression     : comma ;
comma          : assignment ( "," assignment )* ;
assignment     : IDENT "=" assignment
               | logic_or ;
logic_or       : logic_and ( "or" logic_and )* ;
logic_and      : equality ( "and" equality )* ;
equality       : comparison ( ( "!=" | "==" ) comparison )* ;
comparison     : term ( ( ">" | ">=" | "<" | "<=" ) term )* ;
term           : factor ( ( "-" | "+" | "&" | "|" ) factor )* ;
factor         : unary ( ( "/" | "*" ) unary )* ;
unary          : ( "!" | "-" ) unary
               | primary ;
primary        : NUMBER | STRING | "true" | "false" | "nil"
               | "(" expression ")"
               | IDENT ;

